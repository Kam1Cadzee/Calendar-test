{"version":3,"sources":["components/Shared/Title/Title.module.css","components/Header/Header.module.css","components/Calendar/CalendarMonth/DayOfMonth/DayOfMonth.module.css","components/Calendar/CalendarMonth/CalendarMonth.module.css","components/Calendar/CalendarMonth/RowOfMonth/RowOfMonth.module.css","util/calendarUtil.js","redux/Calendar/calendarReducer.js","redux/Calendar/calendarTypes.js","redux/Calendar/calendarSelectors.js","redux/Calendar/calendarActions.js","components/Shared/Button/Button.jsx","components/Shared/Title/Title.jsx","components/Shared/Select/Select.jsx","components/container/SelectContainer.jsx","components/Header/Header.jsx","components/container/HeaderContainer.jsx","components/Calendar/CalendarMonth/DayOfMonth/DayOfMonth.jsx","components/Calendar/CalendarMonth/RowOfMonth/RowOfMonth.jsx","components/Calendar/CalendarMonth/CalendarMonth.jsx","components/Calendar/Calendar.jsx","components/container/CalendarContainer.jsx","App.js","index.js"],"names":["module","exports","title","header","day","calendar","week","getNameMonth","date","dataCalendar","months","month","convertToDate","_ref","year","Date","getMonth","returnMonth","setDate","setMonth","endMonth","dayOfWeek","getLocalDay","getDate","i","push","getDay","TYPE_DISPLAY","MONTH","WEEK","DAY","getParseDate","arguments","length","undefined","getFullYear","combineReducers","events","state","Map","_ref2","type","payload","set","id","event","delete","update","value","merge","dateEvents","currentDate","_ref4","updateIn","Object","values","get","List","index","getIn","findIndex","deleteIn","concat","toConsumableArray","_ref3","objectSpread","typeDisplay","getCurrentDate","getTypeDisplay","getData","createSelector","convertOfDate","getWeek","setTypeDisplay","format","Button","_ref$type","_ref$onClick","onClick","children","react_default","a","createElement","Title","text","className","css","Select","options","onChange","map","opt","key","label","SelectContainer","handleChangeValue","target","_this$props","_this","props","history","this","Shared_Select_Select","React","Component","mapDispatchToProps","compose","connect","withRouter","Header","setDateToday","backDate","nextDate","Shared_Title_Title","Shared_Button_Button","container_SelectContainer","DayOfMonth","setCurrentDate","RowOfMonth","Fragment","CalendarMonth_DayOfMonth_DayOfMonth","CalendarMonth","data","CalendarMonth_RowOfMonth_RowOfMonth","Calendar","react_router","path","render","Calendar_CalendarMonth_CalendarMonth","CalendarContainer","match","params","some","isValideForamt","replace","location","rest","objectWithoutProperties","components_Calendar_Calendar","addEvent","shortid","deleteEvent","changeEvent","App","HeaderContainer","exact","component","store","createStore","reducer","devToolsEnhancer","ReactDOM","react_redux_es","react_router_dom","document","getElementById"],"mappings":"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","file":"static/js/main.1391f841.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__GTsjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1QYwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"DayOfMonth_day__1puXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"CalendarMonth_calendar__1hxA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"week\":\"RowOfMonth_week__2ZlD1\"};","import dataCalendar from \"../dataCalendar\";\nexport const getNameMonth = date => dataCalendar.months[date.month];\nexport const getNameDayOfWeek = date => {\n  const day = getLocalDay(convertToDate(date));\n  return dataCalendar.weeks[day];\n};\n\nexport const convertToDate = ({ year, month, date }) => {\n  return new Date(year, month, date);\n};\n\nexport const getMonth = date => {\n  const returnMonth = [];\n  date.setDate(1);\n  date.setMonth(date.getMonth() + 1);\n  const endMonth = date.getMonth();\n  date.setMonth(date.getMonth() - 1);\n  const dayOfWeek = getLocalDay(date);\n  date.setDate(date.getDate() - dayOfWeek);\n\n  while (date.getMonth() !== endMonth) {\n    const week = [];\n    for (let i = 0; i < 7; i += 1) {\n      week.push(date.getDate());\n      date.setDate(date.getDate() + 1);\n    }\n    returnMonth.push(week);\n  }\n\n  return returnMonth;\n};\nexport const getWeek = date => {\n  const dayOfWeek = getLocalDay(date);\n  date.setDate(date.getDate() - dayOfWeek);\n  const week = [];\n  for (let i = 0; i < 7; i += 1) {\n    week.push(date.getDate());\n    date.setDate(date.getDate() + 1);\n  }\n  return week;\n};\nexport const getLocalDay = date => {\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day - 1;\n};\n\nexport const TYPE_DISPLAY = {\n  MONTH: \"month\",\n  WEEK: \"week\",\n  DAY: \"day\"\n};\n","import { List, Map } from \"immutable\";\nimport {\n  ADD_EVENT,\n  BACK_DATE_WITH_ANY_FORMAT,\n  CHANGE_EVENT,\n  DELETE_EVENT,\n  NEXT_DATE_WITH_ANY_FORMAT,\n  SET_CURRENT_DATE,\n  SET_CURRENT_DATE_TODAY,\n  SET_TYPE_DISPLAY\n} from \"./calendarTypes\";\nimport { combineReducers } from \"redux\";\nimport { TYPE_DISPLAY } from \"../../util/calendarUtil\";\n\nconst getParseDate = (date = new Date()) => {\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth(),\n    date: date.getDate()\n  };\n};\nconst formatReducer = (state = TYPE_DISPLAY.MONTH, { type, payload }) => {\n  switch (type) {\n    case SET_TYPE_DISPLAY:\n      return payload;\n    default:\n      return state;\n  }\n};\nconst init = {\n  events: {\n    qweqw: { text: \"sadas\", time: \"12/12/12\" }\n  },\n  currentDate: new Date(),\n  data: {\n    dateEvent: [2019, 5, 15],\n    \"2019\": {\n      \"5\": {\n        \"15\": [1, 2, 3],\n        \"4\": [6, 9]\n      },\n      \"6\": {\n        \"1\": [12, 23]\n      }\n    }\n  }\n};\n\nconst eventsReducer = (state = new Map(), { type, payload }) => {\n  switch (type) {\n    case ADD_EVENT:\n      return state.set(payload.id, payload.event);\n    case DELETE_EVENT:\n      return state.delete(payload);\n    case CHANGE_EVENT:\n      return state.update(payload.id, value => value.merge(payload.event));\n    default:\n      return state;\n  }\n};\nconst currentDate = (state = getParseDate(), { type, payload }) => {\n  switch (type) {\n    case SET_CURRENT_DATE:\n      return { ...state, date: payload };\n    case BACK_DATE_WITH_ANY_FORMAT:\n      return getParseDate(new Date(state.year, state.month - 1, state.date));\n    case NEXT_DATE_WITH_ANY_FORMAT:\n      return getParseDate(new Date(state.year, state.month + 1, state.date));\n    case SET_CURRENT_DATE_TODAY:\n      return getParseDate();\n    default:\n      return state;\n  }\n};\n\nconst dataReducer = (\n  state = new Map({ currentDate: getParseDate() }),\n  { type, payload }\n) => {\n  switch (type) {\n    case ADD_EVENT:\n      return state.updateIn(Object.values(state.get(\"currentDate\")), events => {\n        if (!events) {\n          return new List([payload.id]);\n        }\n        return events.push(payload.id);\n      });\n    case DELETE_EVENT:\n      const index = state\n        .getIn(Object.values(payload.date))\n        .findIndex(id => id === payload);\n      return state.deleteIn([\n        ...Object.values(state.get(\"currentDate\")),\n        index\n      ]);\n    case SET_CURRENT_DATE:\n    case BACK_DATE_WITH_ANY_FORMAT:\n    case NEXT_DATE_WITH_ANY_FORMAT:\n    case SET_CURRENT_DATE_TODAY:\n      return state.update(\"currentDate\", date =>\n        currentDate(date, { type, payload })\n      );\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  events: eventsReducer,\n  dateEvents: dataReducer,\n  typeDisplay: formatReducer\n});\n","export const BACK_DATE_WITH_ANY_FORMAT = \"BACK_DATE_WITH_ANY_FORMAT\";\nexport const NEXT_DATE_WITH_ANY_FORMAT = \"NEXT_DATE_WITH_ANY_FORMAT\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const CHANGE_EVENT = \"CHANGE_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\n\nexport const SET_CURRENT_DATE = \"SET_CURRENT_DATE\";\nexport const SET_CURRENT_DATE_TODAY = \"SET_CURRENT_DATE_TODAY\";\n\nexport const SET_TYPE_DISPLAY = \"SET_TYPE_DISPLAY\";\n","import { createSelector } from \"reselect\";\nimport {\n  convertToDate,\n  getMonth,\n  getWeek,\n  TYPE_DISPLAY\n} from \"../../util/calendarUtil\";\n\nexport const getCurrentDate = state => state.dateEvents.get(\"currentDate\");\nexport const getTypeDisplay = state => state.typeDisplay;\n\nexport const getData = createSelector(\n  [getCurrentDate, getTypeDisplay],\n  (date, type) => {\n    const convertOfDate = convertToDate(date);\n    switch (type) {\n      case TYPE_DISPLAY.MONTH:\n        return getMonth(convertOfDate);\n      case TYPE_DISPLAY.WEEK:\n        return getWeek(convertOfDate);\n      default:\n        return getMonth(convertOfDate);\n    }\n  }\n);\n","import {\n  ADD_EVENT,\n  BACK_DATE_WITH_ANY_FORMAT,\n  CHANGE_EVENT,\n  DELETE_EVENT,\n  NEXT_DATE_WITH_ANY_FORMAT,\n  SET_CURRENT_DATE,\n  SET_CURRENT_DATE_TODAY,\n  SET_TYPE_DISPLAY\n} from \"./calendarTypes\";\nimport * as shortid from \"shortid\";\nimport { Map } from \"immutable\";\n\nexport const backDate = () => ({ type: BACK_DATE_WITH_ANY_FORMAT });\nexport const nextDate = () => ({ type: NEXT_DATE_WITH_ANY_FORMAT });\n\nexport const addEvent = event => ({\n  type: ADD_EVENT,\n  payload: {\n    id: shortid.generate(),\n    event: new Map(event)\n  }\n});\nexport const deleteEvent = id => ({\n  type: DELETE_EVENT,\n  payload: id\n});\nexport const changeEvent = (id, event) => ({\n  type: CHANGE_EVENT,\n  payload: {\n    id,\n    event: new Map(event)\n  }\n});\n\nexport const setCurrentDate = date => ({\n  type: SET_CURRENT_DATE,\n  payload: date\n});\nexport const setCurrentDateToday = () => ({\n  type: SET_CURRENT_DATE_TODAY\n});\nexport const setTypeDisplay = format => ({\n  type: SET_TYPE_DISPLAY,\n  payload: format\n});\n","import React from \"react\";\nimport css from \"./Button.module.css\";\n\nconst Button = ({ type = \"button\", onClick = () => null, children }) => {\n  return (\n    <button type={type} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport css from \"./Title.module.css\";\n\nconst Title = ({ text }) => <h2 className={css.title}>{text}</h2>;\nexport default Title;\n","import React from \"react\";\n\nconst Select = ({ options, value, onChange }) => {\n  return (\n    <select value={value} onChange={onChange}>\n      {options.map(opt => (\n        <option key={opt.value} value={opt.value}>\n          {opt.label}\n        </option>\n      ))}\n    </select>\n  );\n};\nexport default Select;\n","import { getTypeDisplay } from \"../../redux/Calendar/calendarSelectors\";\nimport { setTypeDisplay } from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Select from \"../Shared/Select/Select\";\nimport React from \"react\";\nimport { TYPE_DISPLAY } from \"../../util/calendarUtil\";\n\nconst options = [\n  { label: \"Месяц\", value: TYPE_DISPLAY.MONTH },\n  { label: \"Неделя\", value: TYPE_DISPLAY.WEEK },\n  { label: \"День\", value: TYPE_DISPLAY.DAY }\n];\nclass SelectContainer extends React.Component {\n  handleChangeValue = ({ target }) => {\n    const { setTypeDisplay, history } = this.props;\n    setTypeDisplay(target.value);\n    history.push(`/${target.value}`);\n  };\n  render() {\n    const { typeDisplay } = this.props;\n    return (\n      <Select\n        options={options}\n        value={typeDisplay}\n        onChange={this.handleChangeValue}\n      />\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  typeDisplay: getTypeDisplay(state)\n});\n\nconst mapDispatchToProps = {\n  setTypeDisplay\n};\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter\n)(SelectContainer);\n","import React from \"react\";\nimport Button from \"../Shared/Button/Button\";\nimport Title from \"../Shared/Title/Title\";\nimport { getNameMonth } from \"../../util/calendarUtil\";\nimport SelectContainer from \"../container/SelectContainer\";\nimport css from \"./Header.module.css\";\n\nconst Header = ({ setDateToday, backDate, nextDate, date }) => {\n  return (\n    <header className={css.header}>\n      <Title text=\"Календар\" />\n      <Button onClick={setDateToday}>Сегодня</Button>\n      <Button onClick={backDate}>{\"<\"}</Button>\n      <Button onClick={nextDate}>{\">\"}</Button>\n      <Title text={`${getNameMonth(date)} ${date.year}`} />\n      <SelectContainer />\n    </header>\n  );\n};\nexport default Header;\n","import { getCurrentDate } from \"../../redux/Calendar/calendarSelectors\";\nimport {\n  backDate,\n  nextDate,\n  setCurrentDateToday\n} from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport Header from \"../Header/Header\";\n\nconst mapStateToProps = state => ({\n  date: getCurrentDate(state)\n});\n\nconst mapDispatchToProps = {\n  setDateToday: setCurrentDateToday,\n  backDate,\n  nextDate\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport css from \"./DayOfMonth.module.css\";\n\nconst DayOfMonth = ({ day, setCurrentDate }) => {\n  return (\n    <div className={css.day} onClick={() => setCurrentDate(day)}>\n      {day}\n    </div>\n  );\n};\nexport default DayOfMonth;\n","import React from \"react\";\nimport css from \"./RowOfMonth.module.css\";\nimport DayOfMonth from \"../DayOfMonth/DayOfMonth\";\n\nconst RowOfMonth = ({ week, setCurrentDate }) => {\n  return (\n    <>\n      {week.map((day, index) => (\n        <DayOfMonth day={day} key={index} setCurrentDate={setCurrentDate} />\n      ))}\n    </>\n  );\n};\nexport default RowOfMonth;\n","import React from \"react\";\nimport RowOfMonth from \"./RowOfMonth/RowOfMonth\";\nimport css from \"./CalendarMonth.module.css\";\n\nconst CalendarMonth = ({ data, setCurrentDate }) => {\n  return (\n    <div className={css.calendar}>\n      {data.map((week, index) => (\n        <RowOfMonth week={week} key={index} setCurrentDate={setCurrentDate} />\n      ))}\n    </div>\n  );\n};\n\nexport default CalendarMonth;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CalendarMonth from \"./CalendarMonth/CalendarMonth\";\n\nconst Calendar = props => {\n  return (\n    <>\n      <Route path=\"/month\" render={() => <CalendarMonth {...props} />} />\n      <Route path=\"/week\" render={() => <h1>week</h1>} />\n      <Route path=\"/day\" render={() => <h1>day</h1>} />\n    </>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport {\n  setTypeDisplay,\n  addEvent,\n  deleteEvent,\n  changeEvent,\n  setCurrentDate\n} from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport { TYPE_DISPLAY } from \"../../util/calendarUtil\";\nimport Calendar from \"../Calendar/Calendar\";\nimport {\n  getData,\n  getTypeDisplay\n} from \"../../redux/Calendar/calendarSelectors\";\n\nconst isValideForamt = format => {\n  return Object.values(TYPE_DISPLAY).some(type => type === format);\n};\nclass CalendarContainer extends React.Component {\n  componentDidMount() {\n    const { format } = this.props.match.params;\n    const { setTypeDisplay } = this.props;\n    if (isValideForamt(format)) setTypeDisplay(format);\n    else {\n      this.props.history.replace(\"/month\");\n    }\n  }\n\n  render() {\n    const { history, location, match, typeDisplay, ...rest } = this.props;\n    const { format } = match.params;\n    return format === typeDisplay ? <Calendar {...rest} /> : null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: getData(state),\n  typeDisplay: getTypeDisplay(state)\n});\nconst mapDispatchToProps = {\n  setTypeDisplay,\n  addEvent,\n  deleteEvent,\n  changeEvent,\n  setCurrentDate\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CalendarContainer);\n","import React from \"react\";\nimport Header from \"./components/container/HeaderContainer\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CalendarContainer from \"./components/container/CalendarContainer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route exact path=\"/:format\" component={CalendarContainer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { createStore } from \"redux\";\nimport reducer from \"./redux/Calendar/calendarReducer\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst store = createStore(reducer, devToolsEnhancer());\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}