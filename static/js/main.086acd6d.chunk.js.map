{"version":3,"sources":["components/Modal/ContextEventModal/ContextEventModal.module.css","components/Modal/AddEventModal/AddEventModal.module.css","components/Shared/Title/Title.module.css","components/Header/Header.module.css","components/Calendar/CalendarMonth/DayOfMonth/DayOfMonth.module.css","components/Calendar/Event/Event.module.css","components/Calendar/CalendarMonth/CalendarMonth.module.css","components/Calendar/CalendarMonth/RowOfMonth/RowOfMonth.module.css","util/calendarUtil.js","redux/Calendar/calendarReducer.js","redux/Calendar/calendarTypes.js","redux/Calendar/calendarSelectors.js","redux/Calendar/calendarActions.js","components/Shared/Button/Button.jsx","components/Shared/Title/Title.jsx","components/Shared/Select/Select.jsx","components/container/SelectContainer.jsx","components/Header/Header.jsx","components/container/HeaderContainer.jsx","util/Toggable.jsx","components/Modal/Modal.jsx","components/Modal/ContextEventModal/ContextEventModal.jsx","components/Calendar/Event/Event.jsx","components/Calendar/CalendarMonth/DayOfMonth/DayOfMonth.jsx","components/Calendar/CalendarMonth/RowOfMonth/RowOfMonth.jsx","components/Modal/AddEventModal/AddEventModal.jsx","components/Calendar/CalendarMonth/CalendarMonth.jsx","components/Calendar/Calendar.jsx","components/container/CalendarContainer.jsx","App.js","index.js"],"names":["module","exports","modal","content","color","activeColor","colors","title","header","day","event","calendar","week","getNameMonth","date","dataCalendar","months","getMonth","getParseDate","arguments","length","undefined","Date","year","getFullYear","month","getDate","returnMonth","setDate","setMonth","endMonth","dayOfWeek","getLocalDay","i","push","getDay","TYPE_DISPLAY","MONTH","WEEK","DAY","combineReducers","events","state","Map","_ref2","type","payload","set","id","delete","update","value","merge","dateEvents","eventDate","_ref5","updateIn","Object","values","get","List","index","getIn","findIndex","deleteIn","concat","toConsumableArray","_ref4","objectSpread","dateEventReducer","typeDisplay","_ref","currentDate","_ref3","newDate","getCurrentDate","getTypeDisplay","getEventsOfDay","props","ids","getEventsId","map","getData","createSelector","param","getWeek","setTypeDisplay","format","Button","_ref$type","_ref$onClick","onClick","children","react_default","a","createElement","Title","text","className","css","Select","options","onChange","opt","key","label","SelectContainer","handleChangeValue","target","_this$props","_this","history","this","Shared_Select_Select","React","Component","mapDispatchToProps","compose","connect","withRouter","Header","setDateToday","backDate","nextDate","Shared_Title_Title","Shared_Button_Button","container_SelectContainer","Toggable","isToggle","handleToggle","setState","toggle","modalRoot","document","getElementById","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","ReactDOM","createPortal","ContextEventModal","deleteEvent","changeColor","onClose","currentColor","style","backElement","createRef","console","log","ref","e","stopPropagation","name","backgroundColor","Event","colorEvent","styleContextMenu","handleChangeColor","_this2","setCurrentDate","_this$state","util_Toggable","Fragment","onContextMenu","preventDefault","_e$target$getBounding","getBoundingClientRect","left","top","height","_window","window","innerWidth","innerHeight","position","components_Modal_Modal","Modal_ContextEventModal_ContextEventModal","_ref$events","handleClick","Calendar_Event_Event","RowOfMonth","CalendarMonth_DayOfMonth_DayOfMonth","AddEventModal","handleChange","handleAddEvent","addEvent","closeModal","current","CalendarMonth","data","CalendarMonth_RowOfMonth_RowOfMonth","Modal_AddEventModal_AddEventModal","Calendar","react_router","path","render","Calendar_CalendarMonth_CalendarMonth","CalendarContainer","match","params","some","isValideForamt","replace","location","rest","objectWithoutProperties","components_Calendar_Calendar","shortid","changeEvent","App","HeaderContainer","exact","component","store","createStore","reducer","devToolsEnhancer","react_redux_es","react_router_dom"],"mappings":"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","file":"static/js/main.086acd6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ContextEventModal_modal__vanLV\",\"content\":\"ContextEventModal_content__1i0SG\",\"color\":\"ContextEventModal_color__FF-Bg\",\"activeColor\":\"ContextEventModal_activeColor__K5DVb ContextEventModal_color__FF-Bg\",\"colors\":\"ContextEventModal_colors__2oTiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddEventModal_modal__29UgL\",\"content\":\"AddEventModal_content__3oBa1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__GTsjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1QYwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"DayOfMonth_day__1puXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"Event_event__2NQqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"CalendarMonth_calendar__1hxA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"week\":\"RowOfMonth_week__2ZlD1\"};","import dataCalendar from \"../dataCalendar\";\nexport const getNameMonth = date => dataCalendar.months[date.getMonth()];\nexport const getNameDayOfWeek = date => {\n  const day = getLocalDay(convertToDate(date));\n  return dataCalendar.weeks[day];\n};\n\nexport const convertToDate = ({ year, month, date }) => {\n  return new Date(year, month, date);\n};\nexport const getParseDate = (date = new Date()) => {\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth(),\n    date: date.getDate()\n  };\n};\n\nexport const getMonth = date => {\n  const returnMonth = [];\n  date.setDate(1);\n  date.setMonth(date.getMonth() + 1);\n  const endMonth = date.getMonth();\n  date.setMonth(date.getMonth() - 1);\n  const dayOfWeek = getLocalDay(date);\n  date.setDate(date.getDate() - dayOfWeek);\n\n  while (date.getMonth() !== endMonth) {\n    const week = [];\n    for (let i = 0; i < 7; i += 1) {\n      week.push(getParseDate(date));\n      date.setDate(date.getDate() + 1);\n    }\n    returnMonth.push(week);\n  }\n\n  return returnMonth;\n};\nexport const getWeek = date => {\n  const dayOfWeek = getLocalDay(date);\n  date.setDate(date.getDate() - dayOfWeek);\n  const week = [];\n  for (let i = 0; i < 7; i += 1) {\n    week.push(date.getDate());\n    date.setDate(date.getDate() + 1);\n  }\n  return week;\n};\nexport const getLocalDay = date => {\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day - 1;\n};\n\nexport const TYPE_DISPLAY = {\n  MONTH: \"month\",\n  WEEK: \"week\",\n  DAY: \"day\"\n};\n","import { List, Map } from \"immutable\";\nimport {\n  ADD_EVENT,\n  BACK_DATE_WITH_ANY_FORMAT,\n  CHANGE_EVENT,\n  DELETE_EVENT,\n  NEXT_DATE_WITH_ANY_FORMAT,\n  SET_DATE_EVENT,\n  SET_CURRENT_DATE_TODAY,\n  SET_TYPE_DISPLAY,\n  SET_CURRENT_DATE\n} from \"./calendarTypes\";\nimport { combineReducers } from \"redux\";\nimport { getParseDate, TYPE_DISPLAY } from \"../../util/calendarUtil\";\n\nconst formatReducer = (state = TYPE_DISPLAY.MONTH, { type, payload }) => {\n  switch (type) {\n    case SET_TYPE_DISPLAY:\n      return payload;\n    default:\n      return state;\n  }\n};\nconst init = {\n  events: {\n    qweqw: { text: \"sadas\", time: \"12/12/12\" }\n  },\n  e: [{ id: 1, text: \"\" }],\n  currentDate: new Date(),\n  data: {\n    dateEvent: [2019, 5, 15],\n    \"2019\": {\n      \"5\": {\n        \"15\": [1, 2, 3],\n        \"4\": [6, 9]\n      },\n      \"6\": {\n        \"1\": [12, 23]\n      }\n    }\n  }\n};\n\nconst eventsReducer = (state = new Map(), { type, payload }) => {\n  switch (type) {\n    case ADD_EVENT:\n      return state.set(payload.id, payload.event);\n    case DELETE_EVENT:\n      return state.delete(payload);\n    case CHANGE_EVENT:\n      return state.update(payload.id, value => value.merge(payload.event));\n    default:\n      return state;\n  }\n};\nconst currentDateReducer = (state = new Date(), { type, payload }) => {\n  switch (type) {\n    case BACK_DATE_WITH_ANY_FORMAT: {\n      const newDate = new Date(state);\n      newDate.setMonth(newDate.getMonth() - 1);\n      return newDate;\n    }\n    case NEXT_DATE_WITH_ANY_FORMAT:\n      const newDate = new Date(state);\n      newDate.setMonth(newDate.getMonth() + 1);\n      return newDate;\n    case SET_CURRENT_DATE_TODAY:\n      return new Date();\n    case SET_CURRENT_DATE:\n      return payload;\n    default:\n      return state;\n  }\n};\nconst dateEventReducer = (state = getParseDate(), { type, payload }) => {\n  switch (type) {\n    case SET_DATE_EVENT:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nconst dataReducer = (\n  state = new Map({ eventDate: getParseDate() }),\n  { type, payload }\n) => {\n  switch (type) {\n    case ADD_EVENT:\n      return state.updateIn(Object.values(state.get(\"eventDate\")), events => {\n        if (!events) {\n          return new List([payload.id]);\n        }\n        return events.push(payload.id);\n      });\n    case DELETE_EVENT:\n      const index = state\n        .getIn(Object.values(state.get(\"eventDate\")))\n        .findIndex(id => id === payload);\n      return state.deleteIn([...Object.values(state.get(\"eventDate\")), index]);\n    case SET_DATE_EVENT:\n    case BACK_DATE_WITH_ANY_FORMAT:\n    case NEXT_DATE_WITH_ANY_FORMAT:\n    case SET_CURRENT_DATE_TODAY:\n      return state.update(\"eventDate\", date =>\n        dateEventReducer(date, { type, payload })\n      );\n    default:\n      return state;\n  }\n};\nexport default combineReducers({\n  events: eventsReducer,\n  dateEvents: dataReducer,\n  typeDisplay: formatReducer,\n  currentDate: currentDateReducer\n});\n","export const BACK_DATE_WITH_ANY_FORMAT = \"BACK_DATE_WITH_ANY_FORMAT\";\nexport const NEXT_DATE_WITH_ANY_FORMAT = \"NEXT_DATE_WITH_ANY_FORMAT\";\nexport const SET_CURRENT_DATE_TODAY = \"SET_CURRENT_DATE_TODAY\";\nexport const SET_CURRENT_DATE = \"SET_CURRENT_DAT\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const CHANGE_EVENT = \"CHANGE_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\n\nexport const SET_DATE_EVENT = \"SET_DATE_EVENT\";\n\nexport const SET_TYPE_DISPLAY = \"SET_TYPE_DISPLAY\";\n","import { createSelector } from \"reselect\";\nimport {\n  convertToDate,\n  getMonth,\n  getWeek,\n  TYPE_DISPLAY\n} from \"../../util/calendarUtil\";\n\nexport const getCurrentDate = state => state.currentDate;\nexport const getTypeDisplay = state => state.typeDisplay;\n\nexport const getEventsId = (state, props) =>\n  state.dateEvents.getIn(Object.values(props.date));\n\nexport const getEventsOfDay = (state, props) => {\n  const ids = getEventsId(state, props);\n  if (ids) {\n    return ids.map(id => state.events.get(id));\n  }\n  return undefined;\n};\nexport const getData = createSelector(\n  [getCurrentDate, getTypeDisplay],\n  (date, type) => {\n    const param = new Date(date);\n    switch (type) {\n      case TYPE_DISPLAY.MONTH:\n        return getMonth(param);\n      case TYPE_DISPLAY.WEEK:\n        return getWeek(param);\n      default:\n        return getMonth(param);\n    }\n  }\n);\n","import {\n  ADD_EVENT,\n  BACK_DATE_WITH_ANY_FORMAT,\n  CHANGE_EVENT,\n  DELETE_EVENT,\n  NEXT_DATE_WITH_ANY_FORMAT,\n  SET_DATE_EVENT,\n  SET_CURRENT_DATE_TODAY,\n  SET_TYPE_DISPLAY\n} from \"./calendarTypes\";\nimport * as shortid from \"shortid\";\nimport { Map } from \"immutable\";\n\nexport const backDate = () => ({ type: BACK_DATE_WITH_ANY_FORMAT });\nexport const nextDate = () => ({ type: NEXT_DATE_WITH_ANY_FORMAT });\nexport const setCurrentDateToday = () => ({\n  type: SET_CURRENT_DATE_TODAY\n});\nexport const setCurrentDate = date => ({\n  type: SET_DATE_EVENT,\n  payload: date\n});\n\nexport const addEvent = event => {\n  const id = shortid.generate();\n  return {\n    type: ADD_EVENT,\n    payload: {\n      id,\n      event: new Map({ id, ...event })\n    }\n  };\n};\nexport const deleteEvent = id => ({\n  type: DELETE_EVENT,\n  payload: id\n});\nexport const changeEvent = (id, event) => ({\n  type: CHANGE_EVENT,\n  payload: {\n    id,\n    event: new Map(event)\n  }\n});\n\nexport const setEventDate = date => ({\n  type: SET_DATE_EVENT,\n  payload: date\n});\n\nexport const setTypeDisplay = format => ({\n  type: SET_TYPE_DISPLAY,\n  payload: format\n});\n","import React from \"react\";\nimport css from \"./Button.module.css\";\n\nconst Button = ({ type = \"button\", onClick = () => null, children }) => {\n  return (\n    <button type={type} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport css from \"./Title.module.css\";\n\nconst Title = ({ text }) => <h2 className={css.title}>{text}</h2>;\nexport default Title;\n","import React from \"react\";\n\nconst Select = ({ options, value, onChange }) => {\n  return (\n    <select value={value} onChange={onChange}>\n      {options.map(opt => (\n        <option key={opt.value} value={opt.value}>\n          {opt.label}\n        </option>\n      ))}\n    </select>\n  );\n};\nexport default Select;\n","import { getTypeDisplay } from \"../../redux/Calendar/calendarSelectors\";\nimport { setTypeDisplay } from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Select from \"../Shared/Select/Select\";\nimport React from \"react\";\nimport { TYPE_DISPLAY } from \"../../util/calendarUtil\";\n\nconst options = [\n  { label: \"Месяц\", value: TYPE_DISPLAY.MONTH },\n  { label: \"Неделя\", value: TYPE_DISPLAY.WEEK },\n  { label: \"День\", value: TYPE_DISPLAY.DAY }\n];\nclass SelectContainer extends React.Component {\n  handleChangeValue = ({ target }) => {\n    const { setTypeDisplay, history } = this.props;\n    setTypeDisplay(target.value);\n    history.push(`/${target.value}`);\n  };\n  render() {\n    const { typeDisplay } = this.props;\n    return (\n      <Select\n        options={options}\n        value={typeDisplay}\n        onChange={this.handleChangeValue}\n      />\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  typeDisplay: getTypeDisplay(state)\n});\n\nconst mapDispatchToProps = {\n  setTypeDisplay\n};\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter\n)(SelectContainer);\n","import React from \"react\";\nimport Button from \"../Shared/Button/Button\";\nimport Title from \"../Shared/Title/Title\";\nimport { getNameMonth } from \"../../util/calendarUtil\";\nimport SelectContainer from \"../container/SelectContainer\";\nimport css from \"./Header.module.css\";\n\nconst Header = ({ setDateToday, backDate, nextDate, date }) => {\n  return (\n    <header className={css.header}>\n      <Title text=\"Календар\" />\n      <Button onClick={setDateToday}>Сегодня</Button>\n      <Button onClick={backDate}>{\"<\"}</Button>\n      <Button onClick={nextDate}>{\">\"}</Button>\n      <Title text={`${getNameMonth(date)} ${date.getFullYear()}`} />\n      <SelectContainer />\n    </header>\n  );\n};\nexport default Header;\n","import { getCurrentDate } from \"../../redux/Calendar/calendarSelectors\";\nimport {\n  backDate,\n  nextDate,\n  setCurrentDateToday\n} from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport Header from \"../Header/Header\";\n\nconst mapStateToProps = state => ({\n  date: getCurrentDate(state)\n});\n\nconst mapDispatchToProps = {\n  setDateToday: setCurrentDateToday,\n  backDate,\n  nextDate\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// render-props, переключатель\nclass Toggable extends React.Component {\n  state = {\n    isToggle: false\n  };\n\n  handleToggle = () => this.setState(state => ({ isToggle: !state.isToggle }));\n\n  render() {\n    const { isToggle } = this.state;\n    const { children } = this.props;\n    return children({ isToggle, toggle: this.handleToggle });\n  }\n}\nToggable.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default Toggable;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement(\"div\");\n  }\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport css from \"./ContextEventModal.module.css\";\n\nconst ContextEventModal = ({\n  deleteEvent,\n  changeColor,\n  colors,\n  id,\n  onClose,\n  currentColor,\n  style\n}) => {\n  let backElement = React.createRef();\n\n  const handleClose = e => {\n    e.stopPropagation();\n    if (e.target === backElement) {\n      onClose();\n    }\n  };\n  const handleDeleteEvent = () => {\n    deleteEvent(id);\n    onClose();\n  };\n\n  console.log(style);\n  return (\n    <div\n      ref={e => (backElement = e)}\n      onClick={handleClose}\n      className={css.modal}\n    >\n      <div className={css.content} style={style}>\n        <button type=\"Button\" onClick={handleDeleteEvent}>\n          delete\n        </button>\n        <div className={css.colors}>\n          {colors.map(color => {\n            return (\n              <span\n                className={color === currentColor ? css.activeColor : css.color}\n                key={color.name}\n                style={{ backgroundColor: color.color }}\n                onClick={() => changeColor(color)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ContextEventModal;\n","import React from \"react\";\nimport css from \"./Event.module.css\";\nimport Toggable from \"../../../util/Toggable\";\nimport Modal from \"../../Modal/Modal\";\nimport ContextEventModal from \"../../Modal/ContextEventModal/ContextEventModal\";\n\nconst colors = [\n  { name: \"blue\", color: \"blue\" },\n  { name: \"aqua\", color: \"aqua\" },\n  { name: \"darkviolet\", color: \"darkviolet\" },\n  { name: \"darkgreen\", color: \"darkgreen\" }\n];\nclass Event extends React.Component {\n  state = {\n    colorEvent: colors[0],\n    styleContextMenu: null\n  };\n  handleChangeColor = color => {\n    this.setState({ colorEvent: color });\n  };\n\n  render() {\n    const { event, deleteEvent, setCurrentDate } = this.props;\n    const { colorEvent, styleContextMenu } = this.state;\n    const style = { backgroundColor: colorEvent.color };\n    return (\n      <Toggable>\n        {({ isToggle, toggle }) => {\n          const openContextModal = e => {\n            e.preventDefault();\n            let { left, top, height } = e.target.getBoundingClientRect();\n            const { innerWidth, innerHeight } = window;\n            left = (left * 100) / innerWidth;\n            top = ((top + height) * 100) / innerHeight;\n            const position = {\n              left: `${left}%`,\n              top: `${top}%`\n            };\n            this.setState({ styleContextMenu: position });\n            toggle();\n            setCurrentDate();\n          };\n          return (\n            <>\n              <div\n                className={css.event}\n                onContextMenu={openContextModal}\n                style={style}\n              >\n                {event.get(\"text\")}\n              </div>\n              {isToggle && (\n                <Modal>\n                  <ContextEventModal\n                    colors={colors}\n                    deleteEvent={deleteEvent}\n                    id={event.get(\"id\")}\n                    onClose={toggle}\n                    changeColor={this.handleChangeColor}\n                    currentColor={colorEvent}\n                    style={styleContextMenu}\n                  />\n                </Modal>\n              )}\n            </>\n          );\n        }}\n      </Toggable>\n    );\n  }\n}\n\nexport default Event;\n","import React from \"react\";\nimport css from \"./DayOfMonth.module.css\";\nimport { getEventsOfDay } from \"../../../../redux/Calendar/calendarSelectors\";\nimport { connect } from \"react-redux\";\nimport Event from \"../../Event/Event\";\n\nconst DayOfMonth = ({ date, setCurrentDate, deleteEvent, events = [] }) => {\n  console.log(events);\n\n  const handleClick = e => {\n    setCurrentDate(date);\n  };\n  return (\n    <div className={css.day} onClick={handleClick}>\n      {date.date}\n      {events.map(event => (\n        <Event\n          key={event.get(\"id\")}\n          event={event}\n          deleteEvent={deleteEvent}\n          setCurrentDate={handleClick}\n        />\n      ))}\n    </div>\n  );\n};\nconst mapStateToProps = (state, props) => ({\n  events: getEventsOfDay(state, props)\n});\nexport default connect(mapStateToProps)(DayOfMonth);\n","import React from \"react\";\nimport css from \"./RowOfMonth.module.css\";\nimport DayOfMonth from \"../DayOfMonth/DayOfMonth\";\n\nconst RowOfMonth = ({ week, setCurrentDate, deleteEvent }) => {\n  return (\n    <>\n      {week.map((date, index) => (\n        <DayOfMonth\n          date={date}\n          key={index}\n          setCurrentDate={setCurrentDate}\n          deleteEvent={deleteEvent}\n        />\n      ))}\n    </>\n  );\n};\nexport default RowOfMonth;\n","import React from \"react\";\nimport css from \"./AddEventModal.module.css\";\n\nclass AddEventModal extends React.Component {\n  backElement = React.createRef();\n\n  state = {\n    text: \"\"\n  };\n  handleChange = e => {\n    this.setState({ text: e.target.value });\n  };\n  handleAddEvent = () => {\n    const { addEvent, onClose } = this.props;\n    addEvent(this.state);\n    onClose();\n  };\n  closeModal = e => {\n    const { onClose } = this.props;\n    if (e.target === this.backElement.current) {\n      onClose();\n    }\n  };\n  render() {\n    const { onClose } = this.props;\n    const { text } = this.state;\n\n    return (\n      <div\n        className={css.modal}\n        onClick={this.closeModal}\n        ref={this.backElement}\n      >\n        <div className={css.content}>\n          <input type=\"text\" value={text} onChange={this.handleChange} />\n          <button onClick={this.handleAddEvent}>Save</button>\n          <button onClick={onClose}>canvel</button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AddEventModal;\n","import React from \"react\";\nimport RowOfMonth from \"./RowOfMonth/RowOfMonth\";\nimport css from \"./CalendarMonth.module.css\";\nimport Toggable from \"../../../util/Toggable\";\nimport Modal from \"../../Modal/Modal\";\nimport AddEventModal from \"../../Modal/AddEventModal/AddEventModal\";\n\nconst CalendarMonth = ({ data, setCurrentDate, addEvent, deleteEvent }) => {\n  return (\n    <Toggable>\n      {({ isToggle, toggle }) => {\n        return (\n          <>\n            <div className={css.calendar} onClick={toggle}>\n              {data.map((week, index) => (\n                <RowOfMonth\n                  week={week}\n                  key={index}\n                  setCurrentDate={setCurrentDate}\n                  deleteEvent={deleteEvent}\n                />\n              ))}\n            </div>\n            {isToggle && (\n              <Modal>\n                <AddEventModal onClose={toggle} addEvent={addEvent} />\n              </Modal>\n            )}\n          </>\n        );\n      }}\n    </Toggable>\n  );\n};\n\nexport default CalendarMonth;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CalendarMonth from \"./CalendarMonth/CalendarMonth\";\n\nconst Calendar = props => {\n  return (\n    <>\n      <Route path=\"/month\" render={() => <CalendarMonth {...props} />} />\n      <Route path=\"/week\" render={() => <h1>week</h1>} />\n      <Route path=\"/day\" render={() => <h1>day</h1>} />\n    </>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport {\n  setTypeDisplay,\n  addEvent,\n  deleteEvent,\n  changeEvent,\n  setEventDate\n} from \"../../redux/Calendar/calendarActions\";\nimport { connect } from \"react-redux\";\nimport { TYPE_DISPLAY } from \"../../util/calendarUtil\";\nimport Calendar from \"../Calendar/Calendar\";\nimport {\n  getData,\n  getTypeDisplay\n} from \"../../redux/Calendar/calendarSelectors\";\n\nconst isValideForamt = format => {\n  return Object.values(TYPE_DISPLAY).some(type => type === format);\n};\nclass CalendarContainer extends React.Component {\n  componentDidMount() {\n    const { format } = this.props.match.params;\n    const { setTypeDisplay } = this.props;\n    if (isValideForamt(format)) setTypeDisplay(format);\n    else {\n      this.props.history.replace(\"/month\");\n    }\n  }\n\n  render() {\n    const { history, location, match, typeDisplay, ...rest } = this.props;\n    const { format } = match.params;\n    return format === typeDisplay ? <Calendar {...rest} /> : null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: getData(state),\n  typeDisplay: getTypeDisplay(state)\n});\nconst mapDispatchToProps = {\n  setTypeDisplay,\n  addEvent,\n  deleteEvent,\n  changeEvent,\n  setCurrentDate: setEventDate\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CalendarContainer);\n","import React from \"react\";\nimport Header from \"./components/container/HeaderContainer\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CalendarContainer from \"./components/container/CalendarContainer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route exact path=\"/:format\" component={CalendarContainer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { createStore } from \"redux\";\nimport reducer from \"./redux/Calendar/calendarReducer\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst store = createStore(reducer, devToolsEnhancer());\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}